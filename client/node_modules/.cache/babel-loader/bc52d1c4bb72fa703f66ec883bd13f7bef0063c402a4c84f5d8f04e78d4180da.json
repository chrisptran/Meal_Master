{"ast":null,"code":"import _slicedToArray from\"C:/Users/chris/OneDrive/Documents/CodingDojo/MERN/round2/Meal_Master/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import axios from'axios';import{Link}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DashboardPage=function DashboardPage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),mealList=_useState2[0],setMealList=_useState2[1];useEffect(function(){axios.get(\"http://localhost:8000/api/meals/\").then(function(res){setMealList(res.data);}).catch(function(err){return console.log(err);});},[]);var handleDelete=function handleDelete(deleteId){axios.delete(\"http://localhost:8000/api/meals/\".concat(deleteId)).then(function(res){var updatedList=mealList.filter(function(eachMeal){return eachMeal._id!==deleteId;});setMealList(updatedList);}).catch(function(err){return console.log(err);});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(Link,{to:\"/meals/new\",children:\"Create a New Meal\"})}),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Type of Meal\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Calories\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Full After?\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:mealList.sort(function(a,b){return new Date(a.date)-new Date(b.date);}).map(function(eachMeal,idx){var formattedDate=new Date(eachMeal.date).toLocaleDateString();return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:formattedDate}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Link,{to:\"/meals/\".concat(eachMeal._id),children:eachMeal.mealType})}),/*#__PURE__*/_jsx(\"td\",{children:eachMeal.calories}),/*#__PURE__*/_jsx(\"td\",{children:eachMeal.isFull?\"Yes\":\"No\"}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(Link,{to:\"/meals/edit/\".concat(eachMeal._id),className:\"btn btn-primary\",children:\"Edit\"}),\"|\",/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger\",onClick:function onClick(){return handleDelete(eachMeal._id);},children:\"Delete\"})]})]},idx);})})]})]});};export default DashboardPage;","map":{"version":3,"names":["React","useState","useEffect","axios","Link","jsx","_jsx","jsxs","_jsxs","DashboardPage","_useState","_useState2","_slicedToArray","mealList","setMealList","get","then","res","data","catch","err","console","log","handleDelete","deleteId","delete","concat","updatedList","filter","eachMeal","_id","children","to","className","sort","a","b","Date","date","map","idx","formattedDate","toLocaleDateString","mealType","calories","isFull","onClick"],"sources":["C:/Users/chris/OneDrive/Documents/CodingDojo/MERN/round2/Meal_Master/client/src/views/DashboardPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst DashboardPage = () => {\r\n\r\n\r\n    const [mealList, setMealList] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:8000/api/meals/`)\r\n            .then(res => {\r\n                setMealList(res.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    }, [])\r\n\r\n    const handleDelete = (deleteId) => {\r\n        axios.delete(`http://localhost:8000/api/meals/${deleteId}`)\r\n        .then(res => {\r\n            const updatedList = mealList.filter((eachMeal) => eachMeal._id !== deleteId)\r\n            setMealList(updatedList)\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p><Link to=\"/meals/new\">Create a New Meal</Link></p>\r\n\r\n\r\n            <table className='table table-striped'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Date</th>\r\n                        <th>Type of Meal</th>\r\n                        <th>Total Calories</th>\r\n                        <th>Full After?</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        mealList\r\n                        .sort((a, b) => new Date(a.date) - new Date(b.date))\r\n                        .map((eachMeal, idx) => {\r\n                            const formattedDate = new Date(eachMeal.date).toLocaleDateString()\r\n                            return (\r\n                                <tr key={idx}>\r\n                                    <td>{formattedDate}</td>\r\n                                    <td><Link to={`/meals/${eachMeal._id}`}>{eachMeal.mealType}</Link></td>\r\n                                    <td>{eachMeal.calories}</td>\r\n                                    <td>{eachMeal.isFull ? \"Yes\" : \"No\"}</td>\r\n                                    <td>\r\n                                        <Link to={`/meals/edit/${eachMeal._id}`} className='btn btn-primary'>Edit</Link>|\r\n                                        <button className='btn btn-danger' onClick={() => handleDelete(eachMeal._id)}>Delete</button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DashboardPage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}